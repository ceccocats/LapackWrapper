require "rake"
require "../common.rb"

task :default => [:install_osx]

VER='5.2.1'

cmakeversion = %x( cmake --version ).scan(/\d+\.\d+/).last
if cmakeversion >= "3.12" then
  PARALLEL = '--parallel 8 '
else
  PARALLEL = ''
end

desc "download superlu_#{VER}.tar.gz libs"
task :download do
  filename = "superlu_#{VER}.tar.gz"
  url_download( "http://crd-legacy.lbl.gov/~xiaoye/SuperLU/#{filename}", filename )
end

desc "build superlu lib for osx"
task :build_osx => [:download] do
  filename = "superlu_#{VER}.tar.gz"
  if File.exists?('lib/lib/libsuperlu_osx.a') then
    puts "SuperLU already compiled"
  else
    extract_tgz(filename)
    FileUtils.rm_rf 'superlu'
    FileUtils.mv    'SuperLU_'+VER, 'superlu'
    FileUtils.rm_rf 'build'
    FileUtils.mkdir 'build'
    FileUtils.cd    'build'
    sh 'cmake -DCMAKE_INSTALL_PREFIX:PATH=../lib '+PARALLEL+'..'
    sh "make; make install"
    FileUtils.mv '../lib/lib/libsuperlu.a', "../lib/lib/libsuperlu_osx.a"
    FileUtils.cd '..'
  end
  Rake::Task[:install_common].invoke()
end

desc "build superlu lib for linux"
task :build_linux => [:download] do
  filename = "superlu_#{VER}.tar.gz"
  if File.exists?('lib/lib/libsuperlu_linux.a') then
    puts "SuperLU already compiled"
  else
    extract_tgz(filename)
    FileUtils.rm_rf 'superlu'
    FileUtils.mv    'SuperLU_'+VER, 'superlu'
    FileUtils.rm_rf 'build'
    FileUtils.mkdir 'build'
    FileUtils.cd    'build'
    sh 'cmake -DCMAKE_INSTALL_PREFIX:PATH=../lib '+PARALLEL+'..'
    sh "make; make install"
    FileUtils.mv '../lib/lib/libsuperlu.a', "../lib/lib/libsuperlu_linux.a"
    FileUtils.cd '..'
  end
  Rake::Task[:install_common].invoke()
end

desc "build superlu lib for windows"
task :build_win, [:year, :bits] => [:download] do |t, args|
  args.with_defaults(:year => "2017", :bits => "x64" )

  if File.exists?("libs/lib/libsuperlu_win_#{args.bits}_static.lib") and
     File.exists?("libs/lib/libsuperlu_win_#{args.bits}_static_debug.lib") then
    puts "SuperLU already compiled"
  else
    filename = "superlu_#{VER}.tar.gz"
    extract_tgz(filename)
    FileUtils.rm_rf 'superlu'
    FileUtils.mv    'SuperLU_'+VER, 'superlu'
    dir = "vs_#{args.year}_#{args.bits}"

    FileUtils.rm_rf   dir
    FileUtils.mkdir_p dir
    FileUtils.cd      dir

    tmp = " -DBITS=#{args.bits} -DYEAR=#{args.year} " + ' -DCMAKE_INSTALL_PREFIX:PATH=..\libs ..'

    win32_64 = ''
    case args.bits
    when /x64/
      win32_64 = ' Win64'
    end

    case args.year
    when "2010"
      sh 'cmake -G "Visual Studio 10 2010' + win32_64 +'" ' + tmp
    when "2012"
      sh 'cmake -G "Visual Studio 11 2012' + win32_64 +'" ' + tmp
    when "2013"
      sh 'cmake -G "Visual Studio 12 2013' + win32_64 +'" ' + tmp
    when "2015"
      sh 'cmake -G "Visual Studio 14 2015' + win32_64 +'" ' + tmp
    when "2017"
      sh 'cmake -G "Visual Studio 15 2017' + win32_64 +'" ' + tmp
    else
      puts "Visual Studio year #{year} not supported!\n";
    end
    sh 'cmake --build . --config Release  --target install '+PARALLEL
    FileUtils.mv '../libs/lib/superlu.lib', "../libs/lib/libsuperlu_win_#{args.bits}_static.lib"

    sh 'cmake --build . --config Debug --target install '+PARALLEL
    FileUtils.mv '../libs/lib/superlu.lib', "../libs/lib/libsuperlu_win_#{args.bits}_static_debug.lib"

    FileUtils.cd '..'
  end
  Rake::Task[:install_common].invoke()
end

task :install_common do |t, args|
  prefix = "../../lib3rd"
  puts "SuperLU copy files to #{prefix}"
  FileUtils.rm_rf   "#{prefix}/include/superlu"
  FileUtils.mkdir_p "#{prefix}/include/superlu"
  FileUtils.mkdir_p "#{prefix}/lib"
  Dir['lib/include/*'].each do |f|
    puts "Copy header #{f}".green
    FileUtils.cp f, prefix+'/include/superlu/'+File.basename(f)
  end
  Dir['libs/include/*'].each do |f|
    puts "Copy header #{f}".green
    FileUtils.cp f, prefix+'/include/superlu/'+File.basename(f)
  end
  Dir['lib/lib/*'].each do |f|
    puts "Copy static lib #{f}".green
    FileUtils.cp f, prefix+'/lib/'+File.basename(f)
  end
  Dir['libs/lib/*'].each do |f|
    puts "Copy static lib #{f}".green
    FileUtils.cp f, prefix+'/lib/'+File.basename(f)
  end
end

desc "install locally superlu lib for linux"
task :install_linux => [:build_linux] do
end

desc "install locally superlu lib for osx"
task :install_osx => [:build_osx] do
end

desc "install locally superlu lib for windows"
task :install_win, [:year, :bits] do |t, args|
  args.with_defaults(:year => "2017", :bits => "x64" )
  Rake::Task[:build_win].invoke(args.year, args.bits)
end

desc "clean superlu for linux"
task :clean_linux do
  FileUtils.rm_rf "lib"
  FileUtils.rm_rf "superlu"
end

desc "clean superlu for osx"
task :clean_osx do
  FileUtils.rm_rf "lib"
  FileUtils.rm_rf "superlu"
end

desc "clean superlu for windows"
task :clean_win do
  FileUtils.rm_rf "libs"
  Dir['vs_*'].each do |f|
    FileUtils.rm_rf f
  end
end
